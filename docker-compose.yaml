version: '2'
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  postgres:
    image: debezium/postgres:13
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d shipment_db"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=shipment_db
      - PGPASSWORD=postgrespw
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d
  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'shipment_db'
      MYSQL_USER: 'shipments'
      MYSQL_PASSWORD: 'shippw'
      MYSQL_ROOT_PASSWORD: '123456'
      MYSQL_ROOT_HOST: '%'
    ports:
      - 3306:3306
    depends_on:
      - postgres
  connect:
    image: debezium/connect-jdbc-es:${DEBEZIUM_VERSION}
    build:
      context: debezium-jdbc-es
      args:
        DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
    ports:
     - 8083:8083
     - 5005:5005
    links:
     - kafka
     - mysql
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses
  read_api:
    build:
      context: read_api
    volumes:
      - ./initialize:/initialize
    command: /bin/sh -c "chmod 755 /initialize/* && dockerize -wait tcp://mysql:3306 -timeout 60s -wait tcp://postgres:5432 -timeout 60s -wait tcp://connect:8083 -timeout 60s python /initialize/check.py"
    ports:
      - 8000:8000
    depends_on:
      - connect
